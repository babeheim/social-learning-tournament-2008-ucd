% This version ONLY innovates if innovated in Round 1


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%Round 1 and 2: Innovate
%Round 3: Exploit
%Rounds 4 to End: Exploit unless payoff decreases below median payoff, then
%       switch
%
%Ryan Boyko with base of code by Matt Zimmerman
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


function [move, myRep]=observe_twice_then_exploit_v2(roundsAlive, myRepertoire, myHistory)

if (isempty(myRepertoire)==0) && (myRepertoire(1,1)==0)
    if size(myRepertoire,2)==1
        myRepertoire=[];
    else
        myRepertoire = myRepertoire(1:2,2:size(myRepertoire,2));
    end
end

if size(myRepertoire, 2)<2
    if size(myRepertoire, 2)==1 && roundsAlive<3 && myHistory(2,1) == -1
        move=myRepertoire(1,1);
    else
        choice=rand;
        if roundsAlive==0 && choice <.1 %innovate 10 percent of time
            move=-1;
        else
            move=0;
        end
    end
elseif myHistory(2,size(myHistory,2))<1
    orderedRep = sortrows([myRepertoire'],2);
    move=orderedRep(size(orderedRep,1),1);
else 
%%%    payoffs = unique(myHistory(4,1:size(myHistory, 2)));
    payoffs = myHistory(4,1:size(myHistory, 2));
    ordered_payoffs = sortrows([payoffs]');
    if mod(size(ordered_payoffs),2)==0
   %%%     disp(ceil(size(ordered_payoffs)/2));
   %%%     disp(floor(size(ordered_payoffs)/2));
   %%%     med_payoff = (ordered_payoffs(ceil(size(ordered_payoffs)/2))+ordered_payoffs(floor(size(ordered_payoffs)/2)))/2;
        med_payoff = (ordered_payoffs(size(ordered_payoffs)/2)+ordered_payoffs(size(ordered_payoffs)/2+1))/2;
    else
        med_payoff = ordered_payoffs(ceil(size(ordered_payoffs)/2));
    end
    if myHistory(4,size(myHistory,2)) < med_payoff(1)
        last_move = myHistory(3,size(myHistory,2));
        if myRepertoire(1,1)==last_move
            move=myRepertoire(1,2);
        else
            move=myRepertoire(1,1);
        end
    else
        move = myHistory(3,size(myHistory,2));
    end
end
    
myRep=myRepertoire;