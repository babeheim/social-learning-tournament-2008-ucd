
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%Round 1 and 2: Innovate
%Round 3: Exploit
%Rounds 4 to End: Exploit unless payoff decreases below median payoff, then
%       switch
%
%Ryan Boyko with base of code by Matt Zimmerman
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


function [move, myRep]=innovate_twice_then_exploit_mean(roundsAlive, myRepertoire, myHistory)

if roundsAlive==0 || roundsAlive==1
    move=-1;
elseif roundsAlive==2
    orderedRep = sortrows([myRepertoire'],2);
    move=orderedRep(size(orderedRep,1),1);
else 
    payoffs = myHistory(4,1:size(myHistory, 2));
    average_payoff = mean(payoffs);
    
    if myHistory(4,size(myHistory,2)) < average_payoff
        last_move = myHistory(3,size(myHistory,2));
        if myRepertoire(1,1)==last_move
            move=myRepertoire(1,2);
        else
            move=myRepertoire(1,1);
        end
    else
        move = myHistory(3,size(myHistory,2));
    end
end
    
myRep=myRepertoire;